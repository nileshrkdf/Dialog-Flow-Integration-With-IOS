// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/session_entity_type.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DFEntityType_Entity;
@class DFSessionEntityType;
@class GPBFieldMask;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum DFSessionEntityType_EntityOverrideMode

/** The types of modifications for a session entity type. */
typedef GPB_ENUM(DFSessionEntityType_EntityOverrideMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DFSessionEntityType_EntityOverrideMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Not specified. This value should be never used. */
  DFSessionEntityType_EntityOverrideMode_EntityOverrideModeUnspecified = 0,

  /**
   * The collection of session entities overrides the collection of entities
   * in the corresponding developer entity type.
   **/
  DFSessionEntityType_EntityOverrideMode_EntityOverrideModeOverride = 1,

  /**
   * The collection of session entities extends the collection of entities in
   * the corresponding developer entity type.
   * Calls to `ListSessionEntityTypes`, `GetSessionEntityType`,
   * `CreateSessionEntityType` and `UpdateSessionEntityType` return the full
   * collection of entities from the developer entity type in the agent's
   * default language and the session entity type.
   **/
  DFSessionEntityType_EntityOverrideMode_EntityOverrideModeSupplement = 2,
};

GPBEnumDescriptor *DFSessionEntityType_EntityOverrideMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DFSessionEntityType_EntityOverrideMode_IsValidValue(int32_t value);

#pragma mark - DFSessionEntityTypeRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface DFSessionEntityTypeRoot : GPBRootObject
@end

#pragma mark - DFSessionEntityType

typedef GPB_ENUM(DFSessionEntityType_FieldNumber) {
  DFSessionEntityType_FieldNumber_Name = 1,
  DFSessionEntityType_FieldNumber_EntityOverrideMode = 2,
  DFSessionEntityType_FieldNumber_EntitiesArray = 3,
};

/**
 * Represents a session entity type.
 *
 * Extends or replaces a developer entity type at the user session level (we
 * refer to the entity types defined at the agent level as "developer entity
 * types").
 *
 * Note: session entity types apply to all queries, regardless of the language.
 **/
@interface DFSessionEntityType : GPBMessage

/**
 * Required. The unique identifier of this session entity type. Format:
 * `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type
 * Display Name>`, or
 * `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
 * ID>/sessions/<Session ID>/entityTypes/<Entity Type Display Name>`.
 * If `Environment ID` is not specified, we assume default 'draft'
 * environment. If `User ID` is not specified, we assume default '-' user.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**
 * Required. Indicates whether the additional data should override or
 * supplement the developer entity type definition.
 **/
@property(nonatomic, readwrite) DFSessionEntityType_EntityOverrideMode entityOverrideMode;

/**
 * Required. The collection of entities associated with this session entity
 * type.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFEntityType_Entity*> *entitiesArray;
/** The number of items in @c entitiesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger entitiesArray_Count;

@end

/**
 * Fetches the raw value of a @c DFSessionEntityType's @c entityOverrideMode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DFSessionEntityType_EntityOverrideMode_RawValue(DFSessionEntityType *message);
/**
 * Sets the raw value of an @c DFSessionEntityType's @c entityOverrideMode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDFSessionEntityType_EntityOverrideMode_RawValue(DFSessionEntityType *message, int32_t value);

#pragma mark - DFListSessionEntityTypesRequest

typedef GPB_ENUM(DFListSessionEntityTypesRequest_FieldNumber) {
  DFListSessionEntityTypesRequest_FieldNumber_Parent = 1,
  DFListSessionEntityTypesRequest_FieldNumber_PageSize = 2,
  DFListSessionEntityTypesRequest_FieldNumber_PageToken = 3,
};

/**
 * The request message for [SessionEntityTypes.ListSessionEntityTypes][google.cloud.dialogflow.v2beta1.SessionEntityTypes.ListSessionEntityTypes].
 **/
@interface DFListSessionEntityTypesRequest : GPBMessage

/**
 * Required. The session to list all session entity types from.
 * Format: `projects/<Project ID>/agent/sessions/<Session ID>` or
 * `projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/
 * sessions/<Session ID>`.
 * If `Environment ID` is not specified, we assume default 'draft'
 * environment. If `User ID` is not specified, we assume default '-' user.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *parent;

/**
 * Optional. The maximum number of items to return in a single page. By
 * default 100 and at most 1000.
 **/
@property(nonatomic, readwrite) int32_t pageSize;

/** Optional. The next_page_token value returned from a previous list request. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pageToken;

@end

#pragma mark - DFListSessionEntityTypesResponse

typedef GPB_ENUM(DFListSessionEntityTypesResponse_FieldNumber) {
  DFListSessionEntityTypesResponse_FieldNumber_SessionEntityTypesArray = 1,
  DFListSessionEntityTypesResponse_FieldNumber_NextPageToken = 2,
};

/**
 * The response message for [SessionEntityTypes.ListSessionEntityTypes][google.cloud.dialogflow.v2beta1.SessionEntityTypes.ListSessionEntityTypes].
 **/
@interface DFListSessionEntityTypesResponse : GPBMessage

/**
 * The list of session entity types. There will be a maximum number of items
 * returned based on the page_size field in the request.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFSessionEntityType*> *sessionEntityTypesArray;
/** The number of items in @c sessionEntityTypesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sessionEntityTypesArray_Count;

/**
 * Token to retrieve the next page of results, or empty if there are no
 * more results in the list.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *nextPageToken;

@end

#pragma mark - DFGetSessionEntityTypeRequest

typedef GPB_ENUM(DFGetSessionEntityTypeRequest_FieldNumber) {
  DFGetSessionEntityTypeRequest_FieldNumber_Name = 1,
};

/**
 * The request message for [SessionEntityTypes.GetSessionEntityType][google.cloud.dialogflow.v2beta1.SessionEntityTypes.GetSessionEntityType].
 **/
@interface DFGetSessionEntityTypeRequest : GPBMessage

/**
 * Required. The name of the session entity type. Format:
 * `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type
 * Display Name>` or `projects/<Project ID>/agent/environments/<Environment
 * ID>/users/<User ID>/sessions/<Session ID>/entityTypes/<Entity Type Display
 * Name>`. If `Environment ID` is not specified, we assume default 'draft'
 * environment. If `User ID` is not specified, we assume default '-' user.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - DFCreateSessionEntityTypeRequest

typedef GPB_ENUM(DFCreateSessionEntityTypeRequest_FieldNumber) {
  DFCreateSessionEntityTypeRequest_FieldNumber_Parent = 1,
  DFCreateSessionEntityTypeRequest_FieldNumber_SessionEntityType = 2,
};

/**
 * The request message for [SessionEntityTypes.CreateSessionEntityType][google.cloud.dialogflow.v2beta1.SessionEntityTypes.CreateSessionEntityType].
 **/
@interface DFCreateSessionEntityTypeRequest : GPBMessage

/**
 * Required. The session to create a session entity type for.
 * Format: `projects/<Project ID>/agent/sessions/<Session ID>` or
 * `projects/<Project ID>/agent/environments/<Environment ID>/users/<User ID>/
 * sessions/<Session ID>`. If `Environment ID` is not specified, we assume
 * default 'draft' environment. If `User ID` is not specified, we assume
 * default '-' user.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *parent;

/** Required. The session entity type to create. */
@property(nonatomic, readwrite, strong, null_resettable) DFSessionEntityType *sessionEntityType;
/** Test to see if @c sessionEntityType has been set. */
@property(nonatomic, readwrite) BOOL hasSessionEntityType;

@end

#pragma mark - DFUpdateSessionEntityTypeRequest

typedef GPB_ENUM(DFUpdateSessionEntityTypeRequest_FieldNumber) {
  DFUpdateSessionEntityTypeRequest_FieldNumber_SessionEntityType = 1,
  DFUpdateSessionEntityTypeRequest_FieldNumber_UpdateMask = 2,
};

/**
 * The request message for [SessionEntityTypes.UpdateSessionEntityType][google.cloud.dialogflow.v2beta1.SessionEntityTypes.UpdateSessionEntityType].
 **/
@interface DFUpdateSessionEntityTypeRequest : GPBMessage

/**
 * Required. The entity type to update. Format:
 * `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type
 * Display Name>` or `projects/<Project ID>/agent/environments/<Environment
 * ID>/users/<User ID>/sessions/<Session ID>/entityTypes/<Entity Type Display
 * Name>`. If `Environment ID` is not specified, we assume default 'draft'
 * environment. If `User ID` is not specified, we assume default '-' user.
 **/
@property(nonatomic, readwrite, strong, null_resettable) DFSessionEntityType *sessionEntityType;
/** Test to see if @c sessionEntityType has been set. */
@property(nonatomic, readwrite) BOOL hasSessionEntityType;

/** Optional. The mask to control which fields get updated. */
@property(nonatomic, readwrite, strong, null_resettable) GPBFieldMask *updateMask;
/** Test to see if @c updateMask has been set. */
@property(nonatomic, readwrite) BOOL hasUpdateMask;

@end

#pragma mark - DFDeleteSessionEntityTypeRequest

typedef GPB_ENUM(DFDeleteSessionEntityTypeRequest_FieldNumber) {
  DFDeleteSessionEntityTypeRequest_FieldNumber_Name = 1,
};

/**
 * The request message for [SessionEntityTypes.DeleteSessionEntityType][google.cloud.dialogflow.v2beta1.SessionEntityTypes.DeleteSessionEntityType].
 **/
@interface DFDeleteSessionEntityTypeRequest : GPBMessage

/**
 * Required. The name of the entity type to delete. Format:
 * `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type
 * Display Name>` or `projects/<Project ID>/agent/environments/<Environment
 * ID>/users/<User ID>/sessions/<Session ID>/entityTypes/<Entity Type Display
 * Name>`. If `Environment ID` is not specified, we assume default 'draft'
 * environment. If `User ID` is not specified, we assume default '-' user.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
