// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/intent.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DFContext;
@class DFIntent;
@class DFIntentBatch;
@class DFIntent_FollowupIntentInfo;
@class DFIntent_Message;
@class DFIntent_Message_BasicCard;
@class DFIntent_Message_BasicCard_Button;
@class DFIntent_Message_BasicCard_Button_OpenUriAction;
@class DFIntent_Message_Card;
@class DFIntent_Message_Card_Button;
@class DFIntent_Message_CarouselSelect;
@class DFIntent_Message_CarouselSelect_Item;
@class DFIntent_Message_Image;
@class DFIntent_Message_LinkOutSuggestion;
@class DFIntent_Message_ListSelect;
@class DFIntent_Message_ListSelect_Item;
@class DFIntent_Message_QuickReplies;
@class DFIntent_Message_SelectItemInfo;
@class DFIntent_Message_SimpleResponse;
@class DFIntent_Message_SimpleResponses;
@class DFIntent_Message_Suggestion;
@class DFIntent_Message_Suggestions;
@class DFIntent_Message_TelephonyPlayAudio;
@class DFIntent_Message_TelephonySynthesizeSpeech;
@class DFIntent_Message_TelephonyTransferCall;
@class DFIntent_Message_Text;
@class DFIntent_Parameter;
@class DFIntent_TrainingPhrase;
@class DFIntent_TrainingPhrase_Part;
@class GPBFieldMask;
@class GPBStruct;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum DFIntentView

/**
 * Represents the options for views of an intent.
 * An intent can be a sizable object. Therefore, we provide a resource view that
 * does not return training phrases in the response by default.
 **/
typedef GPB_ENUM(DFIntentView) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DFIntentView_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Training phrases field is not populated in the response. */
  DFIntentView_IntentViewUnspecified = 0,

  /** All fields are populated. */
  DFIntentView_IntentViewFull = 1,
};

GPBEnumDescriptor *DFIntentView_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DFIntentView_IsValidValue(int32_t value);

#pragma mark - Enum DFIntent_WebhookState

/** Represents the different states that webhooks can be in. */
typedef GPB_ENUM(DFIntent_WebhookState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DFIntent_WebhookState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Webhook is disabled in the agent and in the intent. */
  DFIntent_WebhookState_WebhookStateUnspecified = 0,

  /** Webhook is enabled in the agent and in the intent. */
  DFIntent_WebhookState_WebhookStateEnabled = 1,

  /**
   * Webhook is enabled in the agent and in the intent. Also, each slot
   * filling prompt is forwarded to the webhook.
   **/
  DFIntent_WebhookState_WebhookStateEnabledForSlotFilling = 2,
};

GPBEnumDescriptor *DFIntent_WebhookState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DFIntent_WebhookState_IsValidValue(int32_t value);

#pragma mark - Enum DFIntent_TrainingPhrase_Type

/** Represents different types of training phrases. */
typedef GPB_ENUM(DFIntent_TrainingPhrase_Type) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DFIntent_TrainingPhrase_Type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Not specified. This value should never be used. */
  DFIntent_TrainingPhrase_Type_TypeUnspecified = 0,

  /**
   * Examples do not contain \@-prefixed entity type names, but example parts
   * can be annotated with entity types.
   **/
  DFIntent_TrainingPhrase_Type_Example = 1,

  /**
   * Templates are not annotated with entity types, but they can contain
   * \@-prefixed entity type names as substrings.
   **/
  DFIntent_TrainingPhrase_Type_Template = 2,
};

GPBEnumDescriptor *DFIntent_TrainingPhrase_Type_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DFIntent_TrainingPhrase_Type_IsValidValue(int32_t value);

#pragma mark - Enum DFIntent_Message_Platform

/** Represents different platforms that a rich message can be intended for. */
typedef GPB_ENUM(DFIntent_Message_Platform) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DFIntent_Message_Platform_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Not specified. */
  DFIntent_Message_Platform_PlatformUnspecified = 0,

  /** Facebook. */
  DFIntent_Message_Platform_Facebook = 1,

  /** Slack. */
  DFIntent_Message_Platform_Slack = 2,

  /** Telegram. */
  DFIntent_Message_Platform_Telegram = 3,

  /** Kik. */
  DFIntent_Message_Platform_Kik = 4,

  /** Skype. */
  DFIntent_Message_Platform_Skype = 5,

  /** Line. */
  DFIntent_Message_Platform_Line = 6,

  /** Viber. */
  DFIntent_Message_Platform_Viber = 7,

  /**
   * Actions on Google.
   * When using Actions on Google, you can choose one of the specific
   * Intent.Message types that mention support for Actions on Google,
   * or you can use the advanced Intent.Message.payload field.
   * The payload field provides access to AoG features not available in the
   * specific message types.
   * If using the Intent.Message.payload field, it should have a structure
   * similar to the JSON message shown here. For more information, see
   * [Actions on Google Webhook
   * Format](https://developers.google.com/actions/dialogflow/webhook)
   * <pre>{
   *   "expectUserResponse": true,
   *   "isSsml": false,
   *   "noInputPrompts": [],
   *   "richResponse": {
   *     "items": [
   *       {
   *         "simpleResponse": {
   *           "displayText": "hi",
   *           "textToSpeech": "hello"
   *         }
   *       }
   *     ],
   *     "suggestions": [
   *       {
   *         "title": "Say this"
   *       },
   *       {
   *         "title": "or this"
   *       }
   *     ]
   *   },
   *   "systemIntent": {
   *     "data": {
   *       "\@type": "type.googleapis.com/google.actions.v2.OptionValueSpec",
   *       "listSelect": {
   *         "items": [
   *           {
   *             "optionInfo": {
   *               "key": "key1",
   *               "synonyms": [
   *                 "key one"
   *               ]
   *             },
   *             "title": "must not be empty, but unique"
   *           },
   *           {
   *             "optionInfo": {
   *               "key": "key2",
   *               "synonyms": [
   *                 "key two"
   *               ]
   *             },
   *             "title": "must not be empty, but unique"
   *           }
   *         ]
   *       }
   *     },
   *     "intent": "actions.intent.OPTION"
   *   }
   * }</pre>
   **/
  DFIntent_Message_Platform_ActionsOnGoogle = 8,

  /** Telephony Gateway. */
  DFIntent_Message_Platform_Telephony = 10,
};

GPBEnumDescriptor *DFIntent_Message_Platform_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DFIntent_Message_Platform_IsValidValue(int32_t value);

#pragma mark - DFIntentRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface DFIntentRoot : GPBRootObject
@end

#pragma mark - DFIntent

typedef GPB_ENUM(DFIntent_FieldNumber) {
  DFIntent_FieldNumber_Name = 1,
  DFIntent_FieldNumber_DisplayName = 2,
  DFIntent_FieldNumber_Priority = 3,
  DFIntent_FieldNumber_IsFallback = 4,
  DFIntent_FieldNumber_MlEnabled = 5,
  DFIntent_FieldNumber_WebhookState = 6,
  DFIntent_FieldNumber_InputContextNamesArray = 7,
  DFIntent_FieldNumber_EventsArray = 8,
  DFIntent_FieldNumber_TrainingPhrasesArray = 9,
  DFIntent_FieldNumber_Action = 10,
  DFIntent_FieldNumber_OutputContextsArray = 11,
  DFIntent_FieldNumber_ResetContexts = 12,
  DFIntent_FieldNumber_ParametersArray = 13,
  DFIntent_FieldNumber_MessagesArray = 14,
  DFIntent_FieldNumber_DefaultResponsePlatformsArray = 15,
  DFIntent_FieldNumber_RootFollowupIntentName = 16,
  DFIntent_FieldNumber_ParentFollowupIntentName = 17,
  DFIntent_FieldNumber_FollowupIntentInfoArray = 18,
  DFIntent_FieldNumber_MlDisabled = 19,
  DFIntent_FieldNumber_EndInteraction = 21,
};

/**
 * Represents an intent.
 * Intents convert a number of user expressions or patterns into an action. An
 * action is an extraction of a user command or sentence semantics.
 **/
@interface DFIntent : GPBMessage

/**
 * Required for all methods except `create` (`create` populates the name
 * automatically.
 * The unique identifier of this intent.
 * Format: `projects/<Project ID>/agent/intents/<Intent ID>`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** Required. The name of this intent. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *displayName;

/** Required. Indicates whether webhooks are enabled for the intent. */
@property(nonatomic, readwrite) DFIntent_WebhookState webhookState;

/**
 * Optional. The priority of this intent. Higher numbers represent higher
 * priorities. Zero or negative numbers mean that the intent is disabled.
 **/
@property(nonatomic, readwrite) int32_t priority;

/** Optional. Indicates whether this is a fallback intent. */
@property(nonatomic, readwrite) BOOL isFallback;

/**
 * Optional. Indicates whether Machine Learning is enabled for the intent.
 * Note: If `ml_enabled` setting is set to false, then this intent is not
 * taken into account during inference in `ML ONLY` match mode. Also,
 * auto-markup in the UI is turned off.
 * DEPRECATED! Please use `ml_disabled` field instead.
 * NOTE: If both `ml_enabled` and `ml_disabled` are either not set or false,
 * then the default value is determined as follows:
 * - Before April 15th, 2018 the default is:
 *   ml_enabled = false / ml_disabled = true.
 * - After April 15th, 2018 the default is:
 *   ml_enabled = true / ml_disabled = false.
 **/
@property(nonatomic, readwrite) BOOL mlEnabled GPB_DEPRECATED_MSG("google.cloud.dialogflow.v2beta1.Intent.ml_enabled is deprecated (see google/cloud/dialogflow/v2beta1/intent.proto).");

/**
 * Optional. Indicates whether Machine Learning is disabled for the intent.
 * Note: If `ml_disabled` setting is set to true, then this intent is not
 * taken into account during inference in `ML ONLY` match mode. Also,
 * auto-markup in the UI is turned off.
 **/
@property(nonatomic, readwrite) BOOL mlDisabled;

/**
 * Optional. Indicates that this intent ends an interaction. Some integrations
 * (e.g., Actions on Google or Dialogflow phone gateway) use this information
 * to close interaction with an end user. Default is false.
 **/
@property(nonatomic, readwrite) BOOL endInteraction;

/**
 * Optional. The list of context names required for this intent to be
 * triggered.
 * Format: `projects/<Project ID>/agent/sessions/-/contexts/<Context ID>`.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *inputContextNamesArray;
/** The number of items in @c inputContextNamesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger inputContextNamesArray_Count;

/**
 * Optional. The collection of event names that trigger the intent.
 * If the collection of input contexts is not empty, all of the contexts must
 * be present in the active user session for an event to trigger this intent.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *eventsArray;
/** The number of items in @c eventsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger eventsArray_Count;

/**
 * Optional. The collection of examples/templates that the agent is
 * trained on.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent_TrainingPhrase*> *trainingPhrasesArray;
/** The number of items in @c trainingPhrasesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger trainingPhrasesArray_Count;

/**
 * Optional. The name of the action associated with the intent.
 * Note: The action name must not contain whitespaces.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *action;

/**
 * Optional. The collection of contexts that are activated when the intent
 * is matched. Context messages in this collection should not set the
 * parameters field. Setting the `lifespan_count` to 0 will reset the context
 * when the intent is matched.
 * Format: `projects/<Project ID>/agent/sessions/-/contexts/<Context ID>`.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFContext*> *outputContextsArray;
/** The number of items in @c outputContextsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger outputContextsArray_Count;

/**
 * Optional. Indicates whether to delete all contexts in the current
 * session when this intent is matched.
 **/
@property(nonatomic, readwrite) BOOL resetContexts;

/** Optional. The collection of parameters associated with the intent. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent_Parameter*> *parametersArray;
/** The number of items in @c parametersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger parametersArray_Count;

/**
 * Optional. The collection of rich messages corresponding to the
 * `Response` field in the Dialogflow console.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent_Message*> *messagesArray;
/** The number of items in @c messagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger messagesArray_Count;

/**
 * Optional. The list of platforms for which the first response will be
 * taken from among the messages assigned to the DEFAULT_PLATFORM.
 **/
// |defaultResponsePlatformsArray| contains |DFIntent_Message_Platform|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *defaultResponsePlatformsArray;
/** The number of items in @c defaultResponsePlatformsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger defaultResponsePlatformsArray_Count;

/**
 * The unique identifier of the root intent in the chain of followup intents.
 * It identifies the correct followup intents chain for this intent.
 * Format: `projects/<Project ID>/agent/intents/<Intent ID>`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *rootFollowupIntentName;

/**
 * The unique identifier of the parent intent in the chain of followup
 * intents.
 * It identifies the parent followup intent.
 * Format: `projects/<Project ID>/agent/intents/<Intent ID>`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *parentFollowupIntentName;

/**
 * Optional. Collection of information about all followup intents that have
 * name of this intent as a root_name.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent_FollowupIntentInfo*> *followupIntentInfoArray;
/** The number of items in @c followupIntentInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger followupIntentInfoArray_Count;

@end

/**
 * Fetches the raw value of a @c DFIntent's @c webhookState property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DFIntent_WebhookState_RawValue(DFIntent *message);
/**
 * Sets the raw value of an @c DFIntent's @c webhookState property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDFIntent_WebhookState_RawValue(DFIntent *message, int32_t value);

#pragma mark - DFIntent_TrainingPhrase

typedef GPB_ENUM(DFIntent_TrainingPhrase_FieldNumber) {
  DFIntent_TrainingPhrase_FieldNumber_Name = 1,
  DFIntent_TrainingPhrase_FieldNumber_Type = 2,
  DFIntent_TrainingPhrase_FieldNumber_PartsArray = 3,
  DFIntent_TrainingPhrase_FieldNumber_TimesAddedCount = 4,
};

/**
 * Represents an example or template that the agent is trained on.
 **/
@interface DFIntent_TrainingPhrase : GPBMessage

/** Required. The unique identifier of this training phrase. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** Required. The type of the training phrase. */
@property(nonatomic, readwrite) DFIntent_TrainingPhrase_Type type;

/**
 * Required. The collection of training phrase parts (can be annotated).
 * Fields: `entity_type`, `alias` and `user_defined` should be populated
 * only for the annotated parts of the training phrase.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent_TrainingPhrase_Part*> *partsArray;
/** The number of items in @c partsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger partsArray_Count;

/**
 * Optional. Indicates how many times this example or template was added to
 * the intent. Each time a developer adds an existing sample by editing an
 * intent or training, this counter is increased.
 **/
@property(nonatomic, readwrite) int32_t timesAddedCount;

@end

/**
 * Fetches the raw value of a @c DFIntent_TrainingPhrase's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DFIntent_TrainingPhrase_Type_RawValue(DFIntent_TrainingPhrase *message);
/**
 * Sets the raw value of an @c DFIntent_TrainingPhrase's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDFIntent_TrainingPhrase_Type_RawValue(DFIntent_TrainingPhrase *message, int32_t value);

#pragma mark - DFIntent_TrainingPhrase_Part

typedef GPB_ENUM(DFIntent_TrainingPhrase_Part_FieldNumber) {
  DFIntent_TrainingPhrase_Part_FieldNumber_Text = 1,
  DFIntent_TrainingPhrase_Part_FieldNumber_EntityType = 2,
  DFIntent_TrainingPhrase_Part_FieldNumber_Alias = 3,
  DFIntent_TrainingPhrase_Part_FieldNumber_UserDefined = 4,
};

/**
 * Represents a part of a training phrase.
 **/
@interface DFIntent_TrainingPhrase_Part : GPBMessage

/**
 * Required. The text corresponding to the example or template,
 * if there are no annotations. For
 * annotated examples, it is the text for one of the example's parts.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

/**
 * Optional. The entity type name prefixed with `\@`. This field is
 * required for the annotated part of the text and applies only to
 * examples.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *entityType;

/**
 * Optional. The parameter name for the value extracted from the
 * annotated part of the example.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;

/**
 * Optional. Indicates whether the text was manually annotated by the
 * developer.
 **/
@property(nonatomic, readwrite) BOOL userDefined;

@end

#pragma mark - DFIntent_Parameter

typedef GPB_ENUM(DFIntent_Parameter_FieldNumber) {
  DFIntent_Parameter_FieldNumber_Name = 1,
  DFIntent_Parameter_FieldNumber_DisplayName = 2,
  DFIntent_Parameter_FieldNumber_Value = 3,
  DFIntent_Parameter_FieldNumber_DefaultValue = 4,
  DFIntent_Parameter_FieldNumber_EntityTypeDisplayName = 5,
  DFIntent_Parameter_FieldNumber_Mandatory = 6,
  DFIntent_Parameter_FieldNumber_PromptsArray = 7,
  DFIntent_Parameter_FieldNumber_IsList = 8,
};

/**
 * Represents intent parameters.
 **/
@interface DFIntent_Parameter : GPBMessage

/** The unique identifier of this parameter. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** Required. The name of the parameter. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *displayName;

/**
 * Optional. The definition of the parameter value. It can be:
 * - a constant string,
 * - a parameter value defined as `$parameter_name`,
 * - an original parameter value defined as `$parameter_name.original`,
 * - a parameter value from some context defined as
 *   `#context_name.parameter_name`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

/**
 * Optional. The default value to use when the `value` yields an empty
 * result.
 * Default values can be extracted from contexts by using the following
 * syntax: `#context_name.parameter_name`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *defaultValue;

/**
 * Optional. The name of the entity type, prefixed with `\@`, that
 * describes values of the parameter. If the parameter is
 * required, this must be provided.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *entityTypeDisplayName;

/**
 * Optional. Indicates whether the parameter is required. That is,
 * whether the intent cannot be completed without collecting the parameter
 * value.
 **/
@property(nonatomic, readwrite) BOOL mandatory;

/**
 * Optional. The collection of prompts that the agent can present to the
 * user in order to collect value for the parameter.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *promptsArray;
/** The number of items in @c promptsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger promptsArray_Count;

/** Optional. Indicates whether the parameter represents a list of values. */
@property(nonatomic, readwrite) BOOL isList;

@end

#pragma mark - DFIntent_Message

typedef GPB_ENUM(DFIntent_Message_FieldNumber) {
  DFIntent_Message_FieldNumber_Text = 1,
  DFIntent_Message_FieldNumber_Image = 2,
  DFIntent_Message_FieldNumber_QuickReplies = 3,
  DFIntent_Message_FieldNumber_Card = 4,
  DFIntent_Message_FieldNumber_Payload = 5,
  DFIntent_Message_FieldNumber_Platform = 6,
  DFIntent_Message_FieldNumber_SimpleResponses = 7,
  DFIntent_Message_FieldNumber_BasicCard = 8,
  DFIntent_Message_FieldNumber_Suggestions = 9,
  DFIntent_Message_FieldNumber_LinkOutSuggestion = 10,
  DFIntent_Message_FieldNumber_ListSelect = 11,
  DFIntent_Message_FieldNumber_CarouselSelect = 12,
  DFIntent_Message_FieldNumber_TelephonyPlayAudio = 13,
  DFIntent_Message_FieldNumber_TelephonySynthesizeSpeech = 14,
  DFIntent_Message_FieldNumber_TelephonyTransferCall = 15,
};

typedef GPB_ENUM(DFIntent_Message_Message_OneOfCase) {
  DFIntent_Message_Message_OneOfCase_GPBUnsetOneOfCase = 0,
  DFIntent_Message_Message_OneOfCase_Text = 1,
  DFIntent_Message_Message_OneOfCase_Image = 2,
  DFIntent_Message_Message_OneOfCase_QuickReplies = 3,
  DFIntent_Message_Message_OneOfCase_Card = 4,
  DFIntent_Message_Message_OneOfCase_Payload = 5,
  DFIntent_Message_Message_OneOfCase_SimpleResponses = 7,
  DFIntent_Message_Message_OneOfCase_BasicCard = 8,
  DFIntent_Message_Message_OneOfCase_Suggestions = 9,
  DFIntent_Message_Message_OneOfCase_LinkOutSuggestion = 10,
  DFIntent_Message_Message_OneOfCase_ListSelect = 11,
  DFIntent_Message_Message_OneOfCase_CarouselSelect = 12,
  DFIntent_Message_Message_OneOfCase_TelephonyPlayAudio = 13,
  DFIntent_Message_Message_OneOfCase_TelephonySynthesizeSpeech = 14,
  DFIntent_Message_Message_OneOfCase_TelephonyTransferCall = 15,
};

/**
 * Corresponds to the `Response` field in the Dialogflow console.
 **/
@interface DFIntent_Message : GPBMessage

/** Required. The rich response message. */
@property(nonatomic, readonly) DFIntent_Message_Message_OneOfCase messageOneOfCase;

/** Returns a text response. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_Text *text;

/** Displays an image. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_Image *image;

/** Displays quick replies. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_QuickReplies *quickReplies;

/** Displays a card. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_Card *card;

/**
 * Returns a response containing a custom, platform-specific payload.
 * See the Intent.Message.Platform type for a description of the
 * structure that may be required for your platform.
 **/
@property(nonatomic, readwrite, strong, null_resettable) GPBStruct *payload;

/** Returns a voice or text-only response for Actions on Google. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_SimpleResponses *simpleResponses;

/** Displays a basic card for Actions on Google. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_BasicCard *basicCard;

/** Displays suggestion chips for Actions on Google. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_Suggestions *suggestions;

/** Displays a link out suggestion chip for Actions on Google. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_LinkOutSuggestion *linkOutSuggestion;

/** Displays a list card for Actions on Google. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_ListSelect *listSelect;

/** Displays a carousel card for Actions on Google. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_CarouselSelect *carouselSelect;

/** Plays audio from a file in Telephony Gateway. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_TelephonyPlayAudio *telephonyPlayAudio;

/** Synthesizes speech in Telephony Gateway. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_TelephonySynthesizeSpeech *telephonySynthesizeSpeech;

/** Transfers the call in Telephony Gateway. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_TelephonyTransferCall *telephonyTransferCall;

/** Optional. The platform that this message is intended for. */
@property(nonatomic, readwrite) DFIntent_Message_Platform platform;

@end

/**
 * Fetches the raw value of a @c DFIntent_Message's @c platform property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DFIntent_Message_Platform_RawValue(DFIntent_Message *message);
/**
 * Sets the raw value of an @c DFIntent_Message's @c platform property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDFIntent_Message_Platform_RawValue(DFIntent_Message *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'message'.
 **/
void DFIntent_Message_ClearMessageOneOfCase(DFIntent_Message *message);

#pragma mark - DFIntent_Message_Text

typedef GPB_ENUM(DFIntent_Message_Text_FieldNumber) {
  DFIntent_Message_Text_FieldNumber_TextArray = 1,
};

/**
 * The text response message.
 **/
@interface DFIntent_Message_Text : GPBMessage

/** Optional. The collection of the agent's responses. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *textArray;
/** The number of items in @c textArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger textArray_Count;

@end

#pragma mark - DFIntent_Message_Image

typedef GPB_ENUM(DFIntent_Message_Image_FieldNumber) {
  DFIntent_Message_Image_FieldNumber_ImageUri = 1,
  DFIntent_Message_Image_FieldNumber_AccessibilityText = 2,
};

/**
 * The image response message.
 **/
@interface DFIntent_Message_Image : GPBMessage

/** Optional. The public URI to an image file. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *imageUri;

/**
 * A text description of the image to be used for accessibility,
 * e.g., screen readers. Required if image_uri is set for CarouselSelect.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *accessibilityText;

@end

#pragma mark - DFIntent_Message_QuickReplies

typedef GPB_ENUM(DFIntent_Message_QuickReplies_FieldNumber) {
  DFIntent_Message_QuickReplies_FieldNumber_Title = 1,
  DFIntent_Message_QuickReplies_FieldNumber_QuickRepliesArray = 2,
};

/**
 * The quick replies response message.
 **/
@interface DFIntent_Message_QuickReplies : GPBMessage

/** Optional. The title of the collection of quick replies. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** Optional. The collection of quick replies. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *quickRepliesArray;
/** The number of items in @c quickRepliesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger quickRepliesArray_Count;

@end

#pragma mark - DFIntent_Message_Card

typedef GPB_ENUM(DFIntent_Message_Card_FieldNumber) {
  DFIntent_Message_Card_FieldNumber_Title = 1,
  DFIntent_Message_Card_FieldNumber_Subtitle = 2,
  DFIntent_Message_Card_FieldNumber_ImageUri = 3,
  DFIntent_Message_Card_FieldNumber_ButtonsArray = 4,
};

/**
 * The card response message.
 **/
@interface DFIntent_Message_Card : GPBMessage

/** Optional. The title of the card. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** Optional. The subtitle of the card. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subtitle;

/** Optional. The public URI to an image file for the card. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *imageUri;

/** Optional. The collection of card buttons. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent_Message_Card_Button*> *buttonsArray;
/** The number of items in @c buttonsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger buttonsArray_Count;

@end

#pragma mark - DFIntent_Message_Card_Button

typedef GPB_ENUM(DFIntent_Message_Card_Button_FieldNumber) {
  DFIntent_Message_Card_Button_FieldNumber_Text = 1,
  DFIntent_Message_Card_Button_FieldNumber_Postback = 2,
};

/**
 * Optional. Contains information about a button.
 **/
@interface DFIntent_Message_Card_Button : GPBMessage

/** Optional. The text to show on the button. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

/**
 * Optional. The text to send back to the Dialogflow API or a URI to
 * open.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *postback;

@end

#pragma mark - DFIntent_Message_SimpleResponse

typedef GPB_ENUM(DFIntent_Message_SimpleResponse_FieldNumber) {
  DFIntent_Message_SimpleResponse_FieldNumber_TextToSpeech = 1,
  DFIntent_Message_SimpleResponse_FieldNumber_Ssml = 2,
  DFIntent_Message_SimpleResponse_FieldNumber_DisplayText = 3,
};

/**
 * The simple response message containing speech or text.
 **/
@interface DFIntent_Message_SimpleResponse : GPBMessage

/**
 * One of text_to_speech or ssml must be provided. The plain text of the
 * speech output. Mutually exclusive with ssml.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *textToSpeech;

/**
 * One of text_to_speech or ssml must be provided. Structured spoken
 * response to the user in the SSML format. Mutually exclusive with
 * text_to_speech.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *ssml;

/** Optional. The text to display. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *displayText;

@end

#pragma mark - DFIntent_Message_SimpleResponses

typedef GPB_ENUM(DFIntent_Message_SimpleResponses_FieldNumber) {
  DFIntent_Message_SimpleResponses_FieldNumber_SimpleResponsesArray = 1,
};

/**
 * The collection of simple response candidates.
 * This message in `QueryResult.fulfillment_messages` and
 * `WebhookResponse.fulfillment_messages` should contain only one
 * `SimpleResponse`.
 **/
@interface DFIntent_Message_SimpleResponses : GPBMessage

/** Required. The list of simple responses. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent_Message_SimpleResponse*> *simpleResponsesArray;
/** The number of items in @c simpleResponsesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger simpleResponsesArray_Count;

@end

#pragma mark - DFIntent_Message_BasicCard

typedef GPB_ENUM(DFIntent_Message_BasicCard_FieldNumber) {
  DFIntent_Message_BasicCard_FieldNumber_Title = 1,
  DFIntent_Message_BasicCard_FieldNumber_Subtitle = 2,
  DFIntent_Message_BasicCard_FieldNumber_FormattedText = 3,
  DFIntent_Message_BasicCard_FieldNumber_Image = 4,
  DFIntent_Message_BasicCard_FieldNumber_ButtonsArray = 5,
};

/**
 * The basic card message. Useful for displaying information.
 **/
@interface DFIntent_Message_BasicCard : GPBMessage

/** Optional. The title of the card. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** Optional. The subtitle of the card. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subtitle;

/** Required, unless image is present. The body text of the card. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *formattedText;

/** Optional. The image for the card. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_Image *image;
/** Test to see if @c image has been set. */
@property(nonatomic, readwrite) BOOL hasImage;

/** Optional. The collection of card buttons. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent_Message_BasicCard_Button*> *buttonsArray;
/** The number of items in @c buttonsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger buttonsArray_Count;

@end

#pragma mark - DFIntent_Message_BasicCard_Button

typedef GPB_ENUM(DFIntent_Message_BasicCard_Button_FieldNumber) {
  DFIntent_Message_BasicCard_Button_FieldNumber_Title = 1,
  DFIntent_Message_BasicCard_Button_FieldNumber_OpenUriAction = 2,
};

/**
 * The button object that appears at the bottom of a card.
 **/
@interface DFIntent_Message_BasicCard_Button : GPBMessage

/** Required. The title of the button. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** Required. Action to take when a user taps on the button. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_BasicCard_Button_OpenUriAction *openUriAction;
/** Test to see if @c openUriAction has been set. */
@property(nonatomic, readwrite) BOOL hasOpenUriAction;

@end

#pragma mark - DFIntent_Message_BasicCard_Button_OpenUriAction

typedef GPB_ENUM(DFIntent_Message_BasicCard_Button_OpenUriAction_FieldNumber) {
  DFIntent_Message_BasicCard_Button_OpenUriAction_FieldNumber_Uri = 1,
};

/**
 * Opens the given URI.
 **/
@interface DFIntent_Message_BasicCard_Button_OpenUriAction : GPBMessage

/** Required. The HTTP or HTTPS scheme URI. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uri;

@end

#pragma mark - DFIntent_Message_Suggestion

typedef GPB_ENUM(DFIntent_Message_Suggestion_FieldNumber) {
  DFIntent_Message_Suggestion_FieldNumber_Title = 1,
};

/**
 * The suggestion chip message that the user can tap to quickly post a reply
 * to the conversation.
 **/
@interface DFIntent_Message_Suggestion : GPBMessage

/** Required. The text shown the in the suggestion chip. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@end

#pragma mark - DFIntent_Message_Suggestions

typedef GPB_ENUM(DFIntent_Message_Suggestions_FieldNumber) {
  DFIntent_Message_Suggestions_FieldNumber_SuggestionsArray = 1,
};

/**
 * The collection of suggestions.
 **/
@interface DFIntent_Message_Suggestions : GPBMessage

/** Required. The list of suggested replies. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent_Message_Suggestion*> *suggestionsArray;
/** The number of items in @c suggestionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger suggestionsArray_Count;

@end

#pragma mark - DFIntent_Message_LinkOutSuggestion

typedef GPB_ENUM(DFIntent_Message_LinkOutSuggestion_FieldNumber) {
  DFIntent_Message_LinkOutSuggestion_FieldNumber_DestinationName = 1,
  DFIntent_Message_LinkOutSuggestion_FieldNumber_Uri = 2,
};

/**
 * The suggestion chip message that allows the user to jump out to the app
 * or website associated with this agent.
 **/
@interface DFIntent_Message_LinkOutSuggestion : GPBMessage

/** Required. The name of the app or site this chip is linking to. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destinationName;

/**
 * Required. The URI of the app or site to open when the user taps the
 * suggestion chip.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *uri;

@end

#pragma mark - DFIntent_Message_ListSelect

typedef GPB_ENUM(DFIntent_Message_ListSelect_FieldNumber) {
  DFIntent_Message_ListSelect_FieldNumber_Title = 1,
  DFIntent_Message_ListSelect_FieldNumber_ItemsArray = 2,
};

/**
 * The card for presenting a list of options to select from.
 **/
@interface DFIntent_Message_ListSelect : GPBMessage

/** Optional. The overall title of the list. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** Required. List items. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent_Message_ListSelect_Item*> *itemsArray;
/** The number of items in @c itemsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemsArray_Count;

@end

#pragma mark - DFIntent_Message_ListSelect_Item

typedef GPB_ENUM(DFIntent_Message_ListSelect_Item_FieldNumber) {
  DFIntent_Message_ListSelect_Item_FieldNumber_Info = 1,
  DFIntent_Message_ListSelect_Item_FieldNumber_Title = 2,
  DFIntent_Message_ListSelect_Item_FieldNumber_Description_p = 3,
  DFIntent_Message_ListSelect_Item_FieldNumber_Image = 4,
};

/**
 * An item in the list.
 **/
@interface DFIntent_Message_ListSelect_Item : GPBMessage

/** Required. Additional information about this option. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_SelectItemInfo *info;
/** Test to see if @c info has been set. */
@property(nonatomic, readwrite) BOOL hasInfo;

/** Required. The title of the list item. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** Optional. The main text describing the item. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** Optional. The image to display. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_Image *image;
/** Test to see if @c image has been set. */
@property(nonatomic, readwrite) BOOL hasImage;

@end

#pragma mark - DFIntent_Message_CarouselSelect

typedef GPB_ENUM(DFIntent_Message_CarouselSelect_FieldNumber) {
  DFIntent_Message_CarouselSelect_FieldNumber_ItemsArray = 1,
};

/**
 * The card for presenting a carousel of options to select from.
 **/
@interface DFIntent_Message_CarouselSelect : GPBMessage

/** Required. Carousel items. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent_Message_CarouselSelect_Item*> *itemsArray;
/** The number of items in @c itemsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemsArray_Count;

@end

#pragma mark - DFIntent_Message_CarouselSelect_Item

typedef GPB_ENUM(DFIntent_Message_CarouselSelect_Item_FieldNumber) {
  DFIntent_Message_CarouselSelect_Item_FieldNumber_Info = 1,
  DFIntent_Message_CarouselSelect_Item_FieldNumber_Title = 2,
  DFIntent_Message_CarouselSelect_Item_FieldNumber_Description_p = 3,
  DFIntent_Message_CarouselSelect_Item_FieldNumber_Image = 4,
};

/**
 * An item in the carousel.
 **/
@interface DFIntent_Message_CarouselSelect_Item : GPBMessage

/** Required. Additional info about the option item. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_SelectItemInfo *info;
/** Test to see if @c info has been set. */
@property(nonatomic, readwrite) BOOL hasInfo;

/** Required. Title of the carousel item. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** Optional. The body text of the card. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** Optional. The image to display. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent_Message_Image *image;
/** Test to see if @c image has been set. */
@property(nonatomic, readwrite) BOOL hasImage;

@end

#pragma mark - DFIntent_Message_SelectItemInfo

typedef GPB_ENUM(DFIntent_Message_SelectItemInfo_FieldNumber) {
  DFIntent_Message_SelectItemInfo_FieldNumber_Key = 1,
  DFIntent_Message_SelectItemInfo_FieldNumber_SynonymsArray = 2,
};

/**
 * Additional info about the select item for when it is triggered in a
 * dialog.
 **/
@interface DFIntent_Message_SelectItemInfo : GPBMessage

/**
 * Required. A unique key that will be sent back to the agent if this
 * response is given.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

/**
 * Optional. A list of synonyms that can also be used to trigger this
 * item in dialog.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *synonymsArray;
/** The number of items in @c synonymsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger synonymsArray_Count;

@end

#pragma mark - DFIntent_Message_TelephonyPlayAudio

typedef GPB_ENUM(DFIntent_Message_TelephonyPlayAudio_FieldNumber) {
  DFIntent_Message_TelephonyPlayAudio_FieldNumber_AudioUri = 1,
};

/**
 * Plays audio from a file in Telephony Gateway.
 **/
@interface DFIntent_Message_TelephonyPlayAudio : GPBMessage

/**
 * Required. URI to a Google Cloud Storage object containing the audio to
 * play, e.g., "gs://bucket/object". The object must contain a single
 * channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz.
 *
 * This object must be readable by the `service-<Project
 * Number>\@gcp-sa-dialogflow.iam.gserviceaccount.com` service account
 * where <Project Number> is the number of the Telephony Gateway project
 * (usually the same as the Dialogflow agent project). If the Google Cloud
 * Storage bucket is in the Telephony Gateway project, this permission is
 * added by default when enabling the Dialogflow V2 API.
 *
 * For audio from other sources, consider using the
 * `TelephonySynthesizeSpeech` message with SSML.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *audioUri;

@end

#pragma mark - DFIntent_Message_TelephonySynthesizeSpeech

typedef GPB_ENUM(DFIntent_Message_TelephonySynthesizeSpeech_FieldNumber) {
  DFIntent_Message_TelephonySynthesizeSpeech_FieldNumber_Text = 1,
  DFIntent_Message_TelephonySynthesizeSpeech_FieldNumber_Ssml = 2,
};

typedef GPB_ENUM(DFIntent_Message_TelephonySynthesizeSpeech_Source_OneOfCase) {
  DFIntent_Message_TelephonySynthesizeSpeech_Source_OneOfCase_GPBUnsetOneOfCase = 0,
  DFIntent_Message_TelephonySynthesizeSpeech_Source_OneOfCase_Text = 1,
  DFIntent_Message_TelephonySynthesizeSpeech_Source_OneOfCase_Ssml = 2,
};

/**
 * Synthesizes speech and plays back the synthesized audio to the caller in
 * Telephony Gateway.
 *
 * Telephony Gateway takes the synthesizer settings from
 * `DetectIntentResponse.output_audio_config` which can either be set
 * at request-level or can come from the agent-level synthesizer config.
 **/
@interface DFIntent_Message_TelephonySynthesizeSpeech : GPBMessage

/** Required. The source to be synthesized. */
@property(nonatomic, readonly) DFIntent_Message_TelephonySynthesizeSpeech_Source_OneOfCase sourceOneOfCase;

/** The raw text to be synthesized. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

/**
 * The SSML to be synthesized. For more information, see
 * [SSML](https://developers.google.com/actions/reference/ssml).
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *ssml;

@end

/**
 * Clears whatever value was set for the oneof 'source'.
 **/
void DFIntent_Message_TelephonySynthesizeSpeech_ClearSourceOneOfCase(DFIntent_Message_TelephonySynthesizeSpeech *message);

#pragma mark - DFIntent_Message_TelephonyTransferCall

typedef GPB_ENUM(DFIntent_Message_TelephonyTransferCall_FieldNumber) {
  DFIntent_Message_TelephonyTransferCall_FieldNumber_PhoneNumber = 1,
};

/**
 * Transfers the call in Telephony Gateway.
 **/
@interface DFIntent_Message_TelephonyTransferCall : GPBMessage

/**
 * Required. The phone number to transfer the call to
 * in [E.164 format](https://en.wikipedia.org/wiki/E.164).
 *
 * We currently only allow transferring to US numbers (+1xxxyyyzzzz).
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *phoneNumber;

@end

#pragma mark - DFIntent_FollowupIntentInfo

typedef GPB_ENUM(DFIntent_FollowupIntentInfo_FieldNumber) {
  DFIntent_FollowupIntentInfo_FieldNumber_FollowupIntentName = 1,
  DFIntent_FollowupIntentInfo_FieldNumber_ParentFollowupIntentName = 2,
};

/**
 * Represents a single followup intent in the chain.
 **/
@interface DFIntent_FollowupIntentInfo : GPBMessage

/**
 * The unique identifier of the followup intent.
 * Format: `projects/<Project ID>/agent/intents/<Intent ID>`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *followupIntentName;

/**
 * The unique identifier of the followup intent parent.
 * Format: `projects/<Project ID>/agent/intents/<Intent ID>`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *parentFollowupIntentName;

@end

#pragma mark - DFListIntentsRequest

typedef GPB_ENUM(DFListIntentsRequest_FieldNumber) {
  DFListIntentsRequest_FieldNumber_Parent = 1,
  DFListIntentsRequest_FieldNumber_LanguageCode = 2,
  DFListIntentsRequest_FieldNumber_IntentView = 3,
  DFListIntentsRequest_FieldNumber_PageSize = 4,
  DFListIntentsRequest_FieldNumber_PageToken = 5,
};

/**
 * The request message for [Intents.ListIntents][google.cloud.dialogflow.v2beta1.Intents.ListIntents].
 **/
@interface DFListIntentsRequest : GPBMessage

/**
 * Required. The agent to list all intents from.
 * Format: `projects/<Project ID>/agent`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *parent;

/**
 * Optional. The language to list training phrases, parameters and rich
 * messages for. If not specified, the agent's default language is used.
 * [More than a dozen
 * languages](https://dialogflow.com/docs/reference/language) are supported.
 * Note: languages must be enabled in the agent before they can be used.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *languageCode;

/** Optional. The resource view to apply to the returned intent. */
@property(nonatomic, readwrite) DFIntentView intentView;

/**
 * Optional. The maximum number of items to return in a single page. By
 * default 100 and at most 1000.
 **/
@property(nonatomic, readwrite) int32_t pageSize;

/** Optional. The next_page_token value returned from a previous list request. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pageToken;

@end

/**
 * Fetches the raw value of a @c DFListIntentsRequest's @c intentView property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DFListIntentsRequest_IntentView_RawValue(DFListIntentsRequest *message);
/**
 * Sets the raw value of an @c DFListIntentsRequest's @c intentView property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDFListIntentsRequest_IntentView_RawValue(DFListIntentsRequest *message, int32_t value);

#pragma mark - DFListIntentsResponse

typedef GPB_ENUM(DFListIntentsResponse_FieldNumber) {
  DFListIntentsResponse_FieldNumber_IntentsArray = 1,
  DFListIntentsResponse_FieldNumber_NextPageToken = 2,
};

/**
 * The response message for [Intents.ListIntents][google.cloud.dialogflow.v2beta1.Intents.ListIntents].
 **/
@interface DFListIntentsResponse : GPBMessage

/**
 * The list of agent intents. There will be a maximum number of items
 * returned based on the page_size field in the request.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent*> *intentsArray;
/** The number of items in @c intentsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger intentsArray_Count;

/**
 * Token to retrieve the next page of results, or empty if there are no
 * more results in the list.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *nextPageToken;

@end

#pragma mark - DFGetIntentRequest

typedef GPB_ENUM(DFGetIntentRequest_FieldNumber) {
  DFGetIntentRequest_FieldNumber_Name = 1,
  DFGetIntentRequest_FieldNumber_LanguageCode = 2,
  DFGetIntentRequest_FieldNumber_IntentView = 3,
};

/**
 * The request message for [Intents.GetIntent][google.cloud.dialogflow.v2beta1.Intents.GetIntent].
 **/
@interface DFGetIntentRequest : GPBMessage

/**
 * Required. The name of the intent.
 * Format: `projects/<Project ID>/agent/intents/<Intent ID>`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**
 * Optional. The language to retrieve training phrases, parameters and rich
 * messages for. If not specified, the agent's default language is used.
 * [More than a dozen
 * languages](https://dialogflow.com/docs/reference/language) are supported.
 * Note: languages must be enabled in the agent, before they can be used.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *languageCode;

/** Optional. The resource view to apply to the returned intent. */
@property(nonatomic, readwrite) DFIntentView intentView;

@end

/**
 * Fetches the raw value of a @c DFGetIntentRequest's @c intentView property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DFGetIntentRequest_IntentView_RawValue(DFGetIntentRequest *message);
/**
 * Sets the raw value of an @c DFGetIntentRequest's @c intentView property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDFGetIntentRequest_IntentView_RawValue(DFGetIntentRequest *message, int32_t value);

#pragma mark - DFCreateIntentRequest

typedef GPB_ENUM(DFCreateIntentRequest_FieldNumber) {
  DFCreateIntentRequest_FieldNumber_Parent = 1,
  DFCreateIntentRequest_FieldNumber_Intent = 2,
  DFCreateIntentRequest_FieldNumber_LanguageCode = 3,
  DFCreateIntentRequest_FieldNumber_IntentView = 4,
};

/**
 * The request message for [Intents.CreateIntent][google.cloud.dialogflow.v2beta1.Intents.CreateIntent].
 **/
@interface DFCreateIntentRequest : GPBMessage

/**
 * Required. The agent to create a intent for.
 * Format: `projects/<Project ID>/agent`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *parent;

/** Required. The intent to create. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntent *intent;
/** Test to see if @c intent has been set. */
@property(nonatomic, readwrite) BOOL hasIntent;

/**
 * Optional. The language of training phrases, parameters and rich messages
 * defined in `intent`. If not specified, the agent's default language is
 * used. [More than a dozen
 * languages](https://dialogflow.com/docs/reference/language) are supported.
 * Note: languages must be enabled in the agent, before they can be used.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *languageCode;

/** Optional. The resource view to apply to the returned intent. */
@property(nonatomic, readwrite) DFIntentView intentView;

@end

/**
 * Fetches the raw value of a @c DFCreateIntentRequest's @c intentView property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DFCreateIntentRequest_IntentView_RawValue(DFCreateIntentRequest *message);
/**
 * Sets the raw value of an @c DFCreateIntentRequest's @c intentView property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDFCreateIntentRequest_IntentView_RawValue(DFCreateIntentRequest *message, int32_t value);

#pragma mark - DFUpdateIntentRequest

typedef GPB_ENUM(DFUpdateIntentRequest_FieldNumber) {
  DFUpdateIntentRequest_FieldNumber_Intent = 1,
  DFUpdateIntentRequest_FieldNumber_LanguageCode = 2,
  DFUpdateIntentRequest_FieldNumber_UpdateMask = 3,
  DFUpdateIntentRequest_FieldNumber_IntentView = 4,
};

/**
 * The request message for [Intents.UpdateIntent][google.cloud.dialogflow.v2beta1.Intents.UpdateIntent].
 **/
@interface DFUpdateIntentRequest : GPBMessage

/**
 * Required. The intent to update.
 * Format: `projects/<Project ID>/agent/intents/<Intent ID>`.
 **/
@property(nonatomic, readwrite, strong, null_resettable) DFIntent *intent;
/** Test to see if @c intent has been set. */
@property(nonatomic, readwrite) BOOL hasIntent;

/**
 * Optional. The language of training phrases, parameters and rich messages
 * defined in `intent`. If not specified, the agent's default language is
 * used. [More than a dozen
 * languages](https://dialogflow.com/docs/reference/language) are supported.
 * Note: languages must be enabled in the agent, before they can be used.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *languageCode;

/** Optional. The mask to control which fields get updated. */
@property(nonatomic, readwrite, strong, null_resettable) GPBFieldMask *updateMask;
/** Test to see if @c updateMask has been set. */
@property(nonatomic, readwrite) BOOL hasUpdateMask;

/** Optional. The resource view to apply to the returned intent. */
@property(nonatomic, readwrite) DFIntentView intentView;

@end

/**
 * Fetches the raw value of a @c DFUpdateIntentRequest's @c intentView property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DFUpdateIntentRequest_IntentView_RawValue(DFUpdateIntentRequest *message);
/**
 * Sets the raw value of an @c DFUpdateIntentRequest's @c intentView property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDFUpdateIntentRequest_IntentView_RawValue(DFUpdateIntentRequest *message, int32_t value);

#pragma mark - DFDeleteIntentRequest

typedef GPB_ENUM(DFDeleteIntentRequest_FieldNumber) {
  DFDeleteIntentRequest_FieldNumber_Name = 1,
};

/**
 * The request message for [Intents.DeleteIntent][google.cloud.dialogflow.v2beta1.Intents.DeleteIntent].
 **/
@interface DFDeleteIntentRequest : GPBMessage

/**
 * Required. The name of the intent to delete.
 * Format: `projects/<Project ID>/agent/intents/<Intent ID>`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - DFBatchUpdateIntentsRequest

typedef GPB_ENUM(DFBatchUpdateIntentsRequest_FieldNumber) {
  DFBatchUpdateIntentsRequest_FieldNumber_Parent = 1,
  DFBatchUpdateIntentsRequest_FieldNumber_IntentBatchUri = 2,
  DFBatchUpdateIntentsRequest_FieldNumber_IntentBatchInline = 3,
  DFBatchUpdateIntentsRequest_FieldNumber_LanguageCode = 4,
  DFBatchUpdateIntentsRequest_FieldNumber_UpdateMask = 5,
  DFBatchUpdateIntentsRequest_FieldNumber_IntentView = 6,
};

typedef GPB_ENUM(DFBatchUpdateIntentsRequest_IntentBatch_OneOfCase) {
  DFBatchUpdateIntentsRequest_IntentBatch_OneOfCase_GPBUnsetOneOfCase = 0,
  DFBatchUpdateIntentsRequest_IntentBatch_OneOfCase_IntentBatchUri = 2,
  DFBatchUpdateIntentsRequest_IntentBatch_OneOfCase_IntentBatchInline = 3,
};

/**
 * The request message for [Intents.BatchUpdateIntents][google.cloud.dialogflow.v2beta1.Intents.BatchUpdateIntents].
 **/
@interface DFBatchUpdateIntentsRequest : GPBMessage

/**
 * Required. The name of the agent to update or create intents in.
 * Format: `projects/<Project ID>/agent`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *parent;

/** Required. The source of the intent batch. */
@property(nonatomic, readonly) DFBatchUpdateIntentsRequest_IntentBatch_OneOfCase intentBatchOneOfCase;

/**
 * The URI to a Google Cloud Storage file containing intents to update or
 * create. The file format can either be a serialized proto (of IntentBatch
 * type) or JSON object. Note: The URI must start with "gs://".
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *intentBatchUri;

/** The collection of intents to update or create. */
@property(nonatomic, readwrite, strong, null_resettable) DFIntentBatch *intentBatchInline;

/**
 * Optional. The language of training phrases, parameters and rich messages
 * defined in `intents`. If not specified, the agent's default language is
 * used. [More than a dozen
 * languages](https://dialogflow.com/docs/reference/language) are supported.
 * Note: languages must be enabled in the agent, before they can be used.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *languageCode;

/** Optional. The mask to control which fields get updated. */
@property(nonatomic, readwrite, strong, null_resettable) GPBFieldMask *updateMask;
/** Test to see if @c updateMask has been set. */
@property(nonatomic, readwrite) BOOL hasUpdateMask;

/** Optional. The resource view to apply to the returned intent. */
@property(nonatomic, readwrite) DFIntentView intentView;

@end

/**
 * Fetches the raw value of a @c DFBatchUpdateIntentsRequest's @c intentView property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DFBatchUpdateIntentsRequest_IntentView_RawValue(DFBatchUpdateIntentsRequest *message);
/**
 * Sets the raw value of an @c DFBatchUpdateIntentsRequest's @c intentView property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDFBatchUpdateIntentsRequest_IntentView_RawValue(DFBatchUpdateIntentsRequest *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'intentBatch'.
 **/
void DFBatchUpdateIntentsRequest_ClearIntentBatchOneOfCase(DFBatchUpdateIntentsRequest *message);

#pragma mark - DFBatchUpdateIntentsResponse

typedef GPB_ENUM(DFBatchUpdateIntentsResponse_FieldNumber) {
  DFBatchUpdateIntentsResponse_FieldNumber_IntentsArray = 1,
};

/**
 * The response message for [Intents.BatchUpdateIntents][google.cloud.dialogflow.v2beta1.Intents.BatchUpdateIntents].
 **/
@interface DFBatchUpdateIntentsResponse : GPBMessage

/** The collection of updated or created intents. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent*> *intentsArray;
/** The number of items in @c intentsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger intentsArray_Count;

@end

#pragma mark - DFBatchDeleteIntentsRequest

typedef GPB_ENUM(DFBatchDeleteIntentsRequest_FieldNumber) {
  DFBatchDeleteIntentsRequest_FieldNumber_Parent = 1,
  DFBatchDeleteIntentsRequest_FieldNumber_IntentsArray = 2,
};

/**
 * The request message for [Intents.BatchDeleteIntents][google.cloud.dialogflow.v2beta1.Intents.BatchDeleteIntents].
 **/
@interface DFBatchDeleteIntentsRequest : GPBMessage

/**
 * Required. The name of the agent to delete all entities types for. Format:
 * `projects/<Project ID>/agent`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *parent;

/**
 * Required. The collection of intents to delete. Only intent `name` must be
 * filled in.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent*> *intentsArray;
/** The number of items in @c intentsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger intentsArray_Count;

@end

#pragma mark - DFIntentBatch

typedef GPB_ENUM(DFIntentBatch_FieldNumber) {
  DFIntentBatch_FieldNumber_IntentsArray = 1,
};

/**
 * This message is a wrapper around a collection of intents.
 **/
@interface DFIntentBatch : GPBMessage

/** A collection of intents. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFIntent*> *intentsArray;
/** The number of items in @c intentsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger intentsArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
