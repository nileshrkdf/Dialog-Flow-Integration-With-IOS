// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2beta1/document.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DFDocument;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum DFDocument_KnowledgeType

/** The knowledge type of document content. */
typedef GPB_ENUM(DFDocument_KnowledgeType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DFDocument_KnowledgeType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** The type is unspecified or arbitrary. */
  DFDocument_KnowledgeType_KnowledgeTypeUnspecified = 0,

  /**
   * The document content contains question and answer pairs as either HTML or
   * CSV. Typical FAQ HTML formats are parsed accurately, but unusual formats
   * may fail to be parsed.
   *
   * CSV must have questions in the first column and answers in the second,
   * with no header. Because of this explicit format, they are always parsed
   * accurately.
   **/
  DFDocument_KnowledgeType_Faq = 1,

  /**
   * Documents for which unstructured text is extracted and used for
   * question answering.
   **/
  DFDocument_KnowledgeType_ExtractiveQa = 2,
};

GPBEnumDescriptor *DFDocument_KnowledgeType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DFDocument_KnowledgeType_IsValidValue(int32_t value);

#pragma mark - Enum DFKnowledgeOperationMetadata_State

/** States of the operation. */
typedef GPB_ENUM(DFKnowledgeOperationMetadata_State) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DFKnowledgeOperationMetadata_State_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** State unspecified. */
  DFKnowledgeOperationMetadata_State_StateUnspecified = 0,

  /** The operation has been created. */
  DFKnowledgeOperationMetadata_State_Pending = 1,

  /** The operation is currently running. */
  DFKnowledgeOperationMetadata_State_Running = 2,

  /** The operation is done, either cancelled or completed. */
  DFKnowledgeOperationMetadata_State_Done = 3,
};

GPBEnumDescriptor *DFKnowledgeOperationMetadata_State_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DFKnowledgeOperationMetadata_State_IsValidValue(int32_t value);

#pragma mark - DFDocumentRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface DFDocumentRoot : GPBRootObject
@end

#pragma mark - DFDocument

typedef GPB_ENUM(DFDocument_FieldNumber) {
  DFDocument_FieldNumber_Name = 1,
  DFDocument_FieldNumber_DisplayName = 2,
  DFDocument_FieldNumber_MimeType = 3,
  DFDocument_FieldNumber_KnowledgeTypesArray = 4,
  DFDocument_FieldNumber_ContentUri = 5,
  DFDocument_FieldNumber_Content = 6,
};

typedef GPB_ENUM(DFDocument_Source_OneOfCase) {
  DFDocument_Source_OneOfCase_GPBUnsetOneOfCase = 0,
  DFDocument_Source_OneOfCase_ContentUri = 5,
  DFDocument_Source_OneOfCase_Content = 6,
};

/**
 * A document resource.
 **/
@interface DFDocument : GPBMessage

/**
 * The document resource name.
 * The name must be empty when creating a document.
 * Format: `projects/<Project ID>/knowledgeBases/<Knowledge Base
 * ID>/documents/<Document ID>`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**
 * Required. The display name of the document. The name must be 1024 bytes or
 * less; otherwise, the creation request fails.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *displayName;

/** Required. The MIME type of this document. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mimeType;

/** Required. The knowledge type of document content. */
// |knowledgeTypesArray| contains |DFDocument_KnowledgeType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *knowledgeTypesArray;
/** The number of items in @c knowledgeTypesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger knowledgeTypesArray_Count;

/** Required. The source of this document. */
@property(nonatomic, readonly) DFDocument_Source_OneOfCase sourceOneOfCase;

/**
 * The URI where the file content is located.
 *
 * For documents stored in Google Cloud Storage, these URIs must have
 * the form `gs://<bucket-name>/<object-name>`.
 *
 * NOTE: External URLs must correspond to public webpages, i.e., they must
 * be indexed by Google Search. In particular, URLs for showing documents in
 * Google Cloud Storage (i.e. the URL in your browser) are not supported.
 * Instead use the `gs://` format URI described above.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *contentUri;

/**
 * The raw content of the document. This field is only permitted for
 * EXTRACTIVE_QA and FAQ knowledge types.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

/**
 * Clears whatever value was set for the oneof 'source'.
 **/
void DFDocument_ClearSourceOneOfCase(DFDocument *message);

#pragma mark - DFListDocumentsRequest

typedef GPB_ENUM(DFListDocumentsRequest_FieldNumber) {
  DFListDocumentsRequest_FieldNumber_Parent = 1,
  DFListDocumentsRequest_FieldNumber_PageSize = 2,
  DFListDocumentsRequest_FieldNumber_PageToken = 3,
};

/**
 * Request message for [Documents.ListDocuments][google.cloud.dialogflow.v2beta1.Documents.ListDocuments].
 **/
@interface DFListDocumentsRequest : GPBMessage

/**
 * Required. The knowledge base to list all documents for.
 * Format: `projects/<Project ID>/knowledgeBases/<Knowledge Base ID>`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *parent;

/**
 * Optional. The maximum number of items to return in a single page. By
 * default 10 and at most 100.
 **/
@property(nonatomic, readwrite) int32_t pageSize;

/** Optional. The next_page_token value returned from a previous list request. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pageToken;

@end

#pragma mark - DFListDocumentsResponse

typedef GPB_ENUM(DFListDocumentsResponse_FieldNumber) {
  DFListDocumentsResponse_FieldNumber_DocumentsArray = 1,
  DFListDocumentsResponse_FieldNumber_NextPageToken = 2,
};

/**
 * Response message for [Documents.ListDocuments][google.cloud.dialogflow.v2beta1.Documents.ListDocuments].
 **/
@interface DFListDocumentsResponse : GPBMessage

/** The list of documents. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DFDocument*> *documentsArray;
/** The number of items in @c documentsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger documentsArray_Count;

/**
 * Token to retrieve the next page of results, or empty if there are no
 * more results in the list.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *nextPageToken;

@end

#pragma mark - DFGetDocumentRequest

typedef GPB_ENUM(DFGetDocumentRequest_FieldNumber) {
  DFGetDocumentRequest_FieldNumber_Name = 1,
};

/**
 * Request message for [Documents.GetDocument][google.cloud.dialogflow.v2beta1.Documents.GetDocument].
 **/
@interface DFGetDocumentRequest : GPBMessage

/**
 * Required. The name of the document to retrieve.
 * Format `projects/<Project ID>/knowledgeBases/<Knowledge Base
 * ID>/documents/<Document ID>`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - DFCreateDocumentRequest

typedef GPB_ENUM(DFCreateDocumentRequest_FieldNumber) {
  DFCreateDocumentRequest_FieldNumber_Parent = 1,
  DFCreateDocumentRequest_FieldNumber_Document = 2,
};

/**
 * Request message for [Documents.CreateDocument][google.cloud.dialogflow.v2beta1.Documents.CreateDocument].
 **/
@interface DFCreateDocumentRequest : GPBMessage

/**
 * Required. The knoweldge base to create a document for.
 * Format: `projects/<Project ID>/knowledgeBases/<Knowledge Base ID>`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *parent;

/** Required. The document to create. */
@property(nonatomic, readwrite, strong, null_resettable) DFDocument *document;
/** Test to see if @c document has been set. */
@property(nonatomic, readwrite) BOOL hasDocument;

@end

#pragma mark - DFDeleteDocumentRequest

typedef GPB_ENUM(DFDeleteDocumentRequest_FieldNumber) {
  DFDeleteDocumentRequest_FieldNumber_Name = 1,
};

/**
 * Request message for [Documents.DeleteDocument][google.cloud.dialogflow.v2beta1.Documents.DeleteDocument].
 **/
@interface DFDeleteDocumentRequest : GPBMessage

/**
 * The name of the document to delete.
 * Format: `projects/<Project ID>/knowledgeBases/<Knowledge Base
 * ID>/documents/<Document ID>`.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - DFKnowledgeOperationMetadata

typedef GPB_ENUM(DFKnowledgeOperationMetadata_FieldNumber) {
  DFKnowledgeOperationMetadata_FieldNumber_State = 1,
};

/**
 * Metadata in google::longrunning::Operation for Knowledge operations.
 **/
@interface DFKnowledgeOperationMetadata : GPBMessage

/** Required. The current state of this operation. */
@property(nonatomic, readwrite) DFKnowledgeOperationMetadata_State state;

@end

/**
 * Fetches the raw value of a @c DFKnowledgeOperationMetadata's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DFKnowledgeOperationMetadata_State_RawValue(DFKnowledgeOperationMetadata *message);
/**
 * Sets the raw value of an @c DFKnowledgeOperationMetadata's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDFKnowledgeOperationMetadata_State_RawValue(DFKnowledgeOperationMetadata *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
